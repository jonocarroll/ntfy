[{"path":"https://jonocarroll.github.io/ntfy/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ntfy authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jonocarroll.github.io/ntfy/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jonathan Carroll. Author, maintainer. Andrew Heiss. Contributor. Hadley Wickham. Contributor.","code":""},{"path":"https://jonocarroll.github.io/ntfy/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carroll J (2025). ntfy: Lightweight Wrapper 'ntfy.sh' Service. R package version 0.0.6.9003, https://github.com/jonocarroll/ntfy.","code":"@Manual{,   title = {ntfy: Lightweight Wrapper to the 'ntfy.sh' Service},   author = {Jonathan Carroll},   year = {2025},   note = {R package version 0.0.6.9003},   url = {https://github.com/jonocarroll/ntfy}, }"},{"path":"https://jonocarroll.github.io/ntfy/index.html","id":"ntfy-","dir":"","previous_headings":"","what":"Lightweight Wrapper to the ntfy.sh Service","title":"Lightweight Wrapper to the ntfy.sh Service","text":"ntfy (pronounce: notify) simple HTTP-based pub-sub notification service. allows send notifications phone desktop via scripts computer, entirely without signup, cost setup. ‚Äôs also open source want run . Visit ntfy.sh details. {ntfy} lightweight R wrapper service. magic sauce just POST GET calls equivalent made work nicely R workflow.","code":"curl -d \"Process Complete üòÄ\" ntfy.sh/yourSecretTopic"},{"path":"https://jonocarroll.github.io/ntfy/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Lightweight Wrapper to the ntfy.sh Service","text":"can install released version {ntfy} CRAN can install development version {ntfy} GitHub:","code":"install.packages(\"ntfy\") # install.packages(\"remotes\") remotes::install_github(\"jonocarroll/ntfy\")"},{"path":"https://jonocarroll.github.io/ntfy/index.html","id":"functionality","dir":"","previous_headings":"","what":"Functionality","title":"Lightweight Wrapper to the ntfy.sh Service","text":"Follow instructions ntfy.sh install mobile apps use web app. sign-account necessary. Choose topic (note: isn‚Äôt password-protected service, choose something obscure) subscribe device. Add topic environment variable, e.g. server automatically set https://ntfy.sh unless specify another. can confirmed package loaded, can now send notifications appear device returns {httr2} response object invisibly, errors unsuccessful. {ntfy} can used many ways. One notify completion process. ntfy_done() function sends notification (default) body results notification subscribed devices using base R pipe |> piped commands composed together parser, becomes can use fact time running process last function (, h()) system.time(). ntfy_done_with_timing() function exactly sends notification service can also used progress indicator via {progressr} package - see help(\"handler_ntfy\", package = \"progressr\") https://progressr.futureverse.org/reference/handler_ntfy.html details. ‚Äôre using topic server requires authentication, can pass auth = TRUE, along username password: Alternatively, can set environment variables ‚Äôll get used ntfy_send() automatically: history notifications sent can retrieved well, control far back search (example output shown)","code":"usethis::edit_r_environ()  [...]  NTFY_TOPIC='yourSecretTopic' #NTFY_SERVER='https://ntfy.sh' ntfy_server() #> [1] \"https://ntfy.sh\" library(ntfy) ntfy_send(\"test from R!\") Process completed at <Sys.time()> slow_process <- function(x) {   Sys.sleep(8) # sleep for 8 seconds   x }  mtcars |>    head() |>    slow_process() |>    ntfy_done() #>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1 Process completed at 2025-04-15 09:38:21 f() |>    g() |>      h() h(g(f())) mtcars |>    head() |>    slow_process() |>    ntfy_done_with_timing() #>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1 Process completed in 8.003s ntfy_send(   \"test from R!\",    auth = TRUE,    username = \"example\",    password = \"super-secret-password\" ) usethis::edit_r_environ()  [...]  NTFY_AUTH='TRUE' NTFY_USERNAME='example' NTFY_PASSWORD='super-secret-password' ntfy_send(\"test from R!\") ntfy_history(since = \"1h\") #>             id       time   event           topic #> 1 0oDpk4oisfNO 1667988383 message yourSecretTopic #> 2 4Fcy9kIL0m6Z 1667988413 message yourSecretTopic #> 3 AGXn4q0CirFT 1667990983 message yourSecretTopic #>                                    message #> 1                             test from R! #> 2 Process completed at 2025-04-15 09:38:21 #> 3              Process completed in 8.003s"},{"path":"https://jonocarroll.github.io/ntfy/index.html","id":"api","dir":"","previous_headings":"","what":"API","title":"Lightweight Wrapper to the ntfy.sh Service","text":"full ntfy.sh API supported, including sending title tags","code":""},{"path":"https://jonocarroll.github.io/ntfy/index.html","id":"images","dir":"","previous_headings":"","what":"Images","title":"Lightweight Wrapper to the ntfy.sh Service","text":"Images can sent within notifications specifying image either filename ggplot2 object (saved temporary file)","code":"library(ggplot2) p <- ggplot(mtcars, (aes(mpg, wt))) +    geom_point() +    geom_smooth() +    labs(title = \"ggplot images in {ntfy}\") ntfy_send(\"ggplot2 images in notifications!\",            tags = c(\"tada\", \"chart\"),           image = p) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":"https://jonocarroll.github.io/ntfy/index.html","id":"emoji","dir":"","previous_headings":"","what":"Emoji","title":"Lightweight Wrapper to the ntfy.sh Service","text":"Supported tags (emoji) can sent tags argument (one ). can searched shown show_emoji() look given name compatible values, search compatible metadata. compatible data stored emoji tags stored tags easy auto-complete compatible emoji can shown name found aliases (compatible names) searched tags can force behaviour ","code":"data(\"emoji\") head(emoji) #> # A tibble: 6 √ó 6 #>   emoji aliases         tags      category          description  unicode_version #>   <chr> <chr>           <list>    <chr>             <chr>        <chr>           #> 1 üëé    -1              <chr [2]> People & Body     thumbs down  6.0             #> 2 üëç    +1              <chr [2]> People & Body     thumbs up    6.0             #> 3 üíØ    100             <chr [2]> Smileys & Emotion hundred poi‚Ä¶ 6.0             #> 4 üî¢    1234            <chr [1]> Symbols           input numbe‚Ä¶ 6.0             #> 5 ü•á    1st_place_medal <chr [1]> Activities        1st place m‚Ä¶ 9.0             #> 6 ü•à    2nd_place_medal <chr [1]> Activities        2nd place m‚Ä¶ 9.0 ntfy_send(message = \"sending with tags!\",            tags = c(tags$cat, tags$dog) ) show_emoji(\"rofl\") #>  #>  ü§£ rofl  #> show_emoji(\"lol\") #> Unable to find that name directly. #> Did you perhaps want... #>  #>  ü§£ rofl  #>   show_emoji(\"pet\") #> Unable to find that name directly. #> Did you perhaps want... #>  #>  üê± cat  #>  üê∂ dog  #>  üêπ hamster  #> show_emoji(\"dog\", search = TRUE) #>  #>  üê∂ dog  #>  #> Did you perhaps want... #>  #>  üê© poodle  #>"},{"path":"https://jonocarroll.github.io/ntfy/index.html","id":"similar-services","dir":"","previous_headings":"","what":"Similar Services","title":"Lightweight Wrapper to the ntfy.sh Service","text":"{Rpushbullet} offers similar functionality, requires sign-/ API key {beepr} can play sound process completes IFTTT API can configured send messages e.g.¬†nifffty blog post details many ways send notifications, via email, text, Slack, MS Teams","code":""},{"path":"https://jonocarroll.github.io/ntfy/index.html","id":"privacy","dir":"","previous_headings":"","what":"Privacy","title":"Lightweight Wrapper to the ntfy.sh Service","text":"Q: ‚Äúknow topics exist, can spy ?‚Äù : Refer FAQ","code":""},{"path":"https://jonocarroll.github.io/ntfy/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Lightweight Wrapper to the ntfy.sh Service","text":"service useful , consider donating developer via GitHub sponsors. package useful , also accept donations via GitHub sponsors.","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/emoji.html","id":null,"dir":"Reference","previous_headings":"","what":"Emoji ‚Äî emoji","title":"Emoji ‚Äî emoji","text":"Emoji symbols available ntfy","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/emoji.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emoji ‚Äî emoji","text":"","code":"emoji"},{"path":[]},{"path":"https://jonocarroll.github.io/ntfy/reference/emoji.html","id":"emoji","dir":"Reference","previous_headings":"","what":"emoji","title":"Emoji ‚Äî emoji","text":"data frame 7,240 rows 60 columns: emoji Symbol aliases Name emoji can used tag tags Alternative names category Category description Description unicode_version Unicode Version","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/emoji.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Emoji ‚Äî emoji","text":"https://github.com/binwiederhier/ntfy/blob/main/web/src/app/emojis.js","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ntfy: Lightweight Wrapper to the 'ntfy.sh' Service ‚Äî ntfy-package","title":"ntfy: Lightweight Wrapper to the 'ntfy.sh' Service ‚Äî ntfy-package","text":"'ntfy' (pronounce: notify) service simple HTTP-based pub-sub notification service. allows send notifications phone desktop via scripts computer, entirely without signup, cost setup. also open source want run . Visit https://ntfy.sh details.","code":""},{"path":[]},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ntfy: Lightweight Wrapper to the 'ntfy.sh' Service ‚Äî ntfy-package","text":"Maintainer: Jonathan Carroll rpkg@jcarroll.com.au (ORCID) contributors: Andrew Heiss andrew@andrewheiss.com (ORCID) [contributor] Hadley Wickham h.wickham@gmail.com (ORCID) [contributor]","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_done.html","id":null,"dir":"Reference","previous_headings":"","what":"Notify on Completion of a Process ‚Äî ntfy_done","title":"Notify on Completion of a Process ‚Äî ntfy_done","text":"ntfy_done() tells code completed, ntfy_done_with_timing() tells long took.","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_done.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Notify on Completion of a Process ‚Äî ntfy_done","text":"","code":"ntfy_done(   x,   message = paste0(\"Process completed at \", format(Sys.time())),   title = \"ntfy_done()\",   tags = \"white_check_mark\",   topic = ntfy_topic(),   server = ntfy_server(),   auth = ntfy_auth(),   username = ntfy_username(),   password = ntfy_password(),   ... )  ntfy_done_with_timing(   x,   message = paste0(\"Process completed in \", format(time_result), \"s\"),   title = \"ntfy_done_with_timing()\",   tags = \"stopwatch\",   topic = ntfy_topic(),   server = ntfy_server(),   auth = ntfy_auth(),   username = ntfy_username(),   password = ntfy_password(),   ... )"},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_done.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Notify on Completion of a Process ‚Äî ntfy_done","text":"x result (ignored) message text send notification title title notification. See https://docs.ntfy.sh/publish/#message-title tags text tags emoji shortcodes https://docs.ntfy.sh/emojis/, provided list topic subscribed topic send notification server ntfy server auth logical indicating topic requires password authorization username username access protected topic. password password access protected topic. ... arguments passed ntfy_send()","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_done.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Notify on Completion of a Process ‚Äî ntfy_done","text":"input x (piping). notification sent side-effect.","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_done.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Notify on Completion of a Process ‚Äî ntfy_done","text":"","code":"if (FALSE) { # interactive() # report that a process has completed Sys.sleep(3) |> ntfy_done(\"Woke up\")  # report that a process has completed, and how long it took Sys.sleep(3) |> ntfy_done_with_timing() }"},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve History of Notifications ‚Äî ntfy_history","title":"Retrieve History of Notifications ‚Äî ntfy_history","text":"Retrieve History Notifications","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve History of Notifications ‚Äî ntfy_history","text":"","code":"ntfy_history(   since = \"all\",   topic = ntfy_topic(),   server = ntfy_server(),   auth = ntfy_auth(),   username = ntfy_username(),   password = ntfy_password(),   ... )"},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve History of Notifications ‚Äî ntfy_history","text":"since duration (e.g. \"10m\" \"30s\"), Unix timestamp (e.g. \"1635528757\"), message ID (e.g. \"nFS3knfcQ1xe\"), \"\" (cached messages) topic subscribed topic send notification server ntfy server auth logical indicating topic requires password authorization username username access protected topic. password password access protected topic. ... (named) query parameters add request","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve History of Notifications ‚Äî ntfy_history","text":"data.frame() one row per notification, columns described documentation","code":""},{"path":[]},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve History of Notifications ‚Äî ntfy_history","text":"","code":"if (FALSE) { # interactive() # get the last hour of notifications ntfy_history(since = \"1h\") }"},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_send.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a Notification ‚Äî ntfy_send","title":"Send a Notification ‚Äî ntfy_send","text":"Send Notification","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_send.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a Notification ‚Äî ntfy_send","text":"","code":"ntfy_send(   message = \"test\",   title = NULL,   tags = NULL,   priority = 3,   actions = NULL,   click = NULL,   image = NULL,   attach = NULL,   filename = NULL,   delay = NULL,   email = NULL,   topic = ntfy_topic(),   server = ntfy_server(),   auth = ntfy_auth(),   username = ntfy_username(),   password = ntfy_password() )"},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_send.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a Notification ‚Äî ntfy_send","text":"message text send notification title title notification. See https://docs.ntfy.sh/publish/#message-title tags text tags emoji shortcodes https://docs.ntfy.sh/emojis/, provided list priority Message priority 1=min, 3=default 5=max. See https://docs.ntfy.sh/publish/#message-priority actions Custom user action buttons notifications. See https://docs.ntfy.sh/publish/#action-buttons click Website opened notification clicked. See https://docs.ntfy.sh/publish/#click-action image Image include body notification. Either ggplot object filename. attach URL attachment, see attach via URL. See https://docs.ntfy.sh/publish/#attach-file--url filename File name attachment delay Timestamp duration delayed delivery email E-mail address e-mail notifications?? topic subscribed topic send notification server ntfy server auth logical indicating topic requires password authorization username username access protected topic. password password access protected topic.","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_send.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send a Notification ‚Äî ntfy_send","text":"httr2::response() object, invisibly.","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_send.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send a Notification ‚Äî ntfy_send","text":"","code":"if (FALSE) { # interactive() # send a message to the default topic ('mytopic') ntfy_send(\"test from R!\")  # can use tags (emoji) ntfy_send(message = \"sending with tags!\",           tags = c(tags$cat, tags$dog) ) }"},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_topic.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ntfy topics from environment variables ‚Äî ntfy_topic","title":"Get ntfy topics from environment variables ‚Äî ntfy_topic","text":"ntfy_topic() uses NTFY_TOPIC env var set default topic. ntfy_server() uses NTFY_SERVER env var set default server. ntfy_auth() uses NTFY_AUTH env var determine authentication used. ntfy_username() uses NTFY_USERNAME env var set default username. ntfy_password() uses NTFY_PASSWORD env var set default password.","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/ntfy_topic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ntfy topics from environment variables ‚Äî ntfy_topic","text":"","code":"ntfy_topic()  ntfy_server()  ntfy_username()  ntfy_password()  ntfy_auth()"},{"path":"https://jonocarroll.github.io/ntfy/reference/show_emoji.html","id":null,"dir":"Reference","previous_headings":"","what":"Show an emoji symbol, or find one by name ‚Äî show_emoji","title":"Show an emoji symbol, or find one by name ‚Äî show_emoji","text":"Show emoji symbol, find one name","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/show_emoji.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show an emoji symbol, or find one by name ‚Äî show_emoji","text":"","code":"show_emoji(name = NULL, search = FALSE)"},{"path":"https://jonocarroll.github.io/ntfy/reference/show_emoji.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show an emoji symbol, or find one by name ‚Äî show_emoji","text":"name name emoji either print find search search tags column name?","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/show_emoji.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show an emoji symbol, or find one by name ‚Äî show_emoji","text":"nothing, just prints emoji one found","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/show_emoji.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show an emoji symbol, or find one by name ‚Äî show_emoji","text":"Emoji loaded data(\"emoji\") aliases column contains names compatible ntfy. Alternative names included tags column searched name found aliases.","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/show_emoji.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show an emoji symbol, or find one by name ‚Äî show_emoji","text":"","code":"show_emoji(\"dog\") #>  #>  üê∂ dog  #>   show_emoji(\"party\") #> Unable to find that name directly. #> Did you perhaps want... #>  #>  üéà balloon  #>  üéÇ birthday  #>  üéâ tada  #>"},{"path":"https://jonocarroll.github.io/ntfy/reference/tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Emoji tags ‚Äî tags","title":"Emoji tags ‚Äî tags","text":"Emoji symbols compatible ntfy used tags","code":""},{"path":"https://jonocarroll.github.io/ntfy/reference/tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emoji tags ‚Äî tags","text":"","code":"tags"},{"path":"https://jonocarroll.github.io/ntfy/reference/tags.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Emoji tags ‚Äî tags","text":"object class list length 1855.","code":""},{"path":"https://jonocarroll.github.io/ntfy/news/index.html","id":"ntfy-007","dir":"Changelog","previous_headings":"","what":"ntfy 0.0.7","title":"ntfy 0.0.7","text":"ntfy_send() returns invisibly (#22, @hadley) removed messaging attach topic set (#23, @hadley) robust request (#24, @hadley) tests (#25, @hadley) renamed default branch main","code":""},{"path":"https://jonocarroll.github.io/ntfy/news/index.html","id":"ntfy-006","dir":"Changelog","previous_headings":"","what":"ntfy 0.0.6","title":"ntfy 0.0.6","text":"CRAN release: 2024-11-06 CRAN release - minor internal changes","code":""},{"path":"https://jonocarroll.github.io/ntfy/news/index.html","id":"ntfy-005","dir":"Changelog","previous_headings":"","what":"ntfy 0.0.5","title":"ntfy 0.0.5","text":"Refactored use {httr2} tests, simplified image sending, improved/fixed NDJSON parsing, general clean-(#15, @andrewheiss)","code":""},{"path":"https://jonocarroll.github.io/ntfy/news/index.html","id":"ntfy-004","dir":"Changelog","previous_headings":"","what":"ntfy 0.0.4","title":"ntfy 0.0.4","text":"Added basic authentication protected servers (#12, @andrewheiss)","code":""},{"path":"https://jonocarroll.github.io/ntfy/news/index.html","id":"ntfy-003","dir":"Changelog","previous_headings":"","what":"ntfy 0.0.3","title":"ntfy 0.0.3","text":"Added inline images including ggplot2 Trim trailing slash server URL","code":""},{"path":"https://jonocarroll.github.io/ntfy/news/index.html","id":"ntfy-002","dir":"Changelog","previous_headings":"","what":"ntfy 0.0.2","title":"ntfy 0.0.2","text":"Added show_emoji() processed emoji/tag data Added NEWS.md file track changes package.","code":""},{"path":"https://jonocarroll.github.io/ntfy/news/index.html","id":"ntfy-001","dir":"Changelog","previous_headings":"","what":"ntfy 0.0.1","title":"ntfy 0.0.1","text":"Initial working package","code":""}]
